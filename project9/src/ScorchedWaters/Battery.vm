function Battery.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 0
pop this 3
push constant 16
call Array.new 1
pop this 2
push constant 0
push this 2
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push this 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push this 0
push constant 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push this 0
push constant 3
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push this 0
push constant 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 2
add
push this 0
push constant 5
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 2
add
push this 0
push constant 6
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 2
add
push this 0
push constant 7
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 2
add
push this 0
push constant 8
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 2
add
push this 0
push constant 9
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push this 2
add
push this 0
push constant 10
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push this 2
add
push this 0
push constant 11
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push this 2
add
push this 0
push constant 12
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push this 2
add
push this 0
push constant 13
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push this 2
add
push this 0
push constant 14
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push this 2
add
push this 0
push constant 15
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Battery.drawBattery 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 15
sub
push this 1
call Screen.drawLine 4
pop temp 0
push this 0
push constant 2
sub
push this 1
push constant 1
sub
push this 0
push constant 13
sub
push this 1
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 0
push constant 5
sub
push this 1
push constant 2
sub
push this 0
push constant 10
sub
push this 1
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push this 0
push constant 7
sub
push this 1
push constant 3
sub
push this 0
push constant 8
sub
push this 1
push constant 3
sub
call Screen.drawLine 4
pop temp 0
push this 0
push constant 7
sub
push this 1
push constant 4
sub
push this 0
push constant 8
sub
push this 1
push constant 4
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Battery.lookupTable 1
push argument 0
pop pointer 0
push constant 2
call Array.new 1
pop local 0
push argument 1
push constant 90
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 100
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push argument 1
push constant 90
gt
push argument 1
push constant 95
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push local 0
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 99
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push argument 1
push constant 94
gt
push argument 1
push constant 100
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push local 0
add
push constant 17
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 98
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push argument 1
push constant 99
gt
push argument 1
push constant 105
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push local 0
add
push constant 26
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 97
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push argument 1
push constant 104
gt
push argument 1
push constant 110
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push local 0
add
push constant 34
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 94
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE4
push argument 1
push constant 109
gt
push argument 1
push constant 115
lt
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
push local 0
add
push constant 42
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 91
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
push argument 1
push constant 114
gt
push argument 1
push constant 120
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
push local 0
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE6
push argument 1
push constant 119
gt
push argument 1
push constant 125
lt
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
push local 0
add
push constant 57
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 82
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE7
push argument 1
push constant 124
gt
push argument 1
push constant 130
lt
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 0
push local 0
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 77
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE8
push argument 1
push constant 129
gt
push argument 1
push constant 135
lt
and
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
push local 0
add
push constant 71
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 71
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE9
push argument 1
push constant 134
gt
push argument 1
push constant 140
lt
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
push local 0
add
push constant 77
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE10
push argument 1
push constant 139
gt
push argument 1
push constant 145
lt
and
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
push local 0
add
push constant 82
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 57
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE11
push argument 1
push constant 144
gt
push argument 1
push constant 150
lt
and
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 0
push local 0
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE12
push argument 1
push constant 149
gt
push argument 1
push constant 155
lt
and
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 0
push local 0
add
push constant 91
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 42
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE13
push argument 1
push constant 154
gt
push argument 1
push constant 160
lt
and
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
push local 0
add
push constant 94
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 34
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE14
push argument 1
push constant 159
gt
push argument 1
push constant 165
lt
and
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
push local 0
add
push constant 97
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 26
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE15
push argument 1
push constant 164
gt
push argument 1
push constant 170
lt
and
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push constant 0
push local 0
add
push constant 98
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 17
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE16
push argument 1
push constant 169
gt
push argument 1
push constant 175
lt
and
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push constant 0
push local 0
add
push constant 99
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE17
push argument 1
push constant 174
gt
push argument 1
push constant 181
lt
and
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push constant 0
push local 0
add
push constant 99
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE18
push argument 1
push constant 90
lt
push argument 1
push constant 84
gt
and
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 0
push local 0
add
push constant 9
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 99
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE19
push argument 1
push constant 85
lt
push argument 1
push constant 79
gt
and
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push constant 0
push local 0
add
push constant 17
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 98
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE20
push argument 1
push constant 80
lt
push argument 1
push constant 74
gt
and
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push constant 0
push local 0
add
push constant 26
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 97
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE21
push argument 1
push constant 75
lt
push argument 1
push constant 69
gt
and
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push constant 0
push local 0
add
push constant 34
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 94
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE22
push argument 1
push constant 70
lt
push argument 1
push constant 64
gt
and
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 0
push local 0
add
push constant 42
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 91
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE23
push argument 1
push constant 65
lt
push argument 1
push constant 59
gt
and
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push constant 0
push local 0
add
push constant 50
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE24
push argument 1
push constant 60
lt
push argument 1
push constant 54
gt
and
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push constant 0
push local 0
add
push constant 57
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 82
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE25
push argument 1
push constant 55
lt
push argument 1
push constant 49
gt
and
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push constant 0
push local 0
add
push constant 64
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 77
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE26
push argument 1
push constant 50
lt
push argument 1
push constant 44
gt
and
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push constant 0
push local 0
add
push constant 71
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 71
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE27
push argument 1
push constant 45
lt
push argument 1
push constant 39
gt
and
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
push constant 0
push local 0
add
push constant 77
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE28
push argument 1
push constant 40
gt
push argument 1
push constant 34
gt
and
if-goto IF_TRUE29
goto IF_FALSE29
label IF_TRUE29
push constant 0
push local 0
add
push constant 82
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 57
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE29
push argument 1
push constant 35
lt
push argument 1
push constant 29
gt
and
if-goto IF_TRUE30
goto IF_FALSE30
label IF_TRUE30
push constant 0
push local 0
add
push constant 87
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE30
push argument 1
push constant 30
lt
push argument 1
push constant 24
gt
and
if-goto IF_TRUE31
goto IF_FALSE31
label IF_TRUE31
push constant 0
push local 0
add
push constant 91
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 42
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE31
push argument 1
push constant 25
lt
push argument 1
push constant 19
gt
and
if-goto IF_TRUE32
goto IF_FALSE32
label IF_TRUE32
push constant 0
push local 0
add
push constant 94
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 34
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE32
push argument 1
push constant 20
lt
push argument 1
push constant 14
gt
and
if-goto IF_TRUE33
goto IF_FALSE33
label IF_TRUE33
push constant 0
push local 0
add
push constant 97
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 26
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE33
push argument 1
push constant 15
lt
push argument 1
push constant 9
gt
and
if-goto IF_TRUE34
goto IF_FALSE34
label IF_TRUE34
push constant 0
push local 0
add
push constant 98
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 17
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE34
push argument 1
push constant 10
lt
push argument 1
push constant 4
gt
and
if-goto IF_TRUE35
goto IF_FALSE35
label IF_TRUE35
push constant 0
push local 0
add
push constant 99
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE35
push argument 1
push constant 5
lt
push argument 1
push constant 0
gt
and
if-goto IF_TRUE36
goto IF_FALSE36
label IF_TRUE36
push constant 0
push local 0
add
push constant 99
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE36
push local 0
return
function Battery.getHitbox 1
push argument 0
pop pointer 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 0
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 15
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function Battery.fireShot 9
push argument 0
pop pointer 0
push constant 0
pop local 8
push pointer 0
push argument 1
call Battery.lookupTable 2
pop local 3
push constant 0
push local 3
add
pop pointer 1
push that 0
pop local 1
push constant 1
push local 3
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 9
sub
push this 1
push constant 8
sub
call Screen.drawPixel 2
pop temp 0
push this 0
push constant 9
sub
pop local 4
push this 1
push constant 8
sub
pop local 5
push pointer 0
push local 4
push local 5
call Battery.renderShell 3
pop temp 0
push local 4
push local 1
push argument 2
call Math.multiply 2
push constant 100
call Math.divide 2
add
pop local 6
push local 5
push local 2
push argument 2
call Math.multiply 2
push constant 100
call Math.divide 2
sub
pop local 7
label WHILE_EXP0
push local 6
push constant 3
sub
push constant 0
gt
push local 6
push constant 3
add
push constant 511
lt
and
push local 7
push constant 3
sub
push constant 0
gt
and
push local 7
push constant 3
add
push constant 255
lt
and
not
if-goto WHILE_END0
push pointer 0
push local 4
push local 5
call Battery.eraseShell 3
pop temp 0
push local 6
pop local 4
push local 7
pop local 5
push local 6
push local 1
push argument 2
call Math.multiply 2
push constant 100
call Math.divide 2
add
pop local 6
push local 7
push local 2
push argument 2
call Math.multiply 2
push constant 100
call Math.divide 2
push constant 30
push local 8
call Math.multiply 2
sub
push constant 10
call Math.divide 2
sub
pop local 7
push local 6
push constant 0
gt
push local 6
push constant 511
lt
and
push local 7
push constant 0
gt
and
push local 7
push constant 255
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 6
push local 7
call Battery.renderShell 3
pop temp 0
label IF_FALSE0
push local 8
push constant 1
add
pop local 8
push constant 500
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push local 4
push local 5
call Battery.eraseShell 3
pop temp 0
push local 6
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 3
sub
push constant 255
push local 0
push constant 3
add
push constant 255
call Screen.drawLine 4
pop temp 0
push local 0
push constant 255
push local 0
push constant 245
call Screen.drawLine 4
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 3
sub
push constant 255
push local 0
push constant 3
add
push constant 255
call Screen.drawLine 4
pop temp 0
push local 0
push constant 255
push local 0
push constant 245
call Screen.drawLine 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
return
function Battery.renderShell 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 3
sub
push argument 2
push argument 1
push constant 3
add
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 3
sub
push argument 1
push argument 2
push constant 3
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Battery.eraseShell 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 1
sub
push argument 2
push argument 1
push constant 1
add
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 1
sub
push argument 1
push argument 2
push constant 1
add
call Screen.drawLine 4
pop temp 0
push constant 250
call Sys.wait 1
pop temp 0
push argument 1
push constant 3
sub
push argument 2
push argument 1
push constant 3
add
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 3
sub
push argument 1
push argument 2
push constant 3
add
call Screen.drawLine 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Battery.destroy 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
