// push argument1 
@1
D=A
@ARG
D=D+M
@temp
M=D
@temp
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop 
@1
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop 
@0
D=A
@THAT
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant1 
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop 
@1
D=A
@THAT
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push argument0 
@0
D=A
@ARG
D=D+M
@temp
M=D
@temp
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant2 
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// pop 
@0
D=A
@ARG
D=M+D
@temp
M=D
@SP
M=M-1
@SP
A=M
D=M
@temp
A=M
M=D
(MAIN_LOOP_START)
// push argument0 
@0
D=A
@ARG
D=D+M
@temp
M=D
@temp
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// if goto at 1
@SP
M=M-1
A=M
D=M
@COMPUTE_ELEMENT
D;JNE
// goto END_PROGRAM
@END_PROGRAM
0;JMP
(COMPUTE_ELEMENT)
// push that0 
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push that1 
@1
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
// pop 
@2
D=A
@THAT
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push pointer1 
@1
D=A
@3
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant1 
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
// pop 
@1
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push argument0 
@0
D=A
@ARG
D=D+M
@temp
M=D
@temp
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant1 
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// pop 
@0
D=A
@ARG
D=M+D
@temp
M=D
@SP
M=M-1
@SP
A=M
D=M
@temp
A=M
M=D
// goto MAIN_LOOP_START
@MAIN_LOOP_START
0;JMP
(END_PROGRAM)
